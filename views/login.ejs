//로그인
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"
    ></script>
    <style></style>
  </head>
  <body>
    <h1>국밥이 여행하는 곳</h1>
    <div id="sign_in_page">
      <p>로그인</p>
      <p>Email: <input type="text" id="sign_in_page_email" /></p>
      <p>Password: <input type="text" id="sign_in_page_pw" /></p>
      <button type="button" class="btn btn-light" id="sign_in">로그인</button>
      <button type="button" class="btn btn-light" id="sign_up">
        회원 가입
      </button>
      <button type="button" class="btn btn-success naverLogin">
        네이버 로그인
      </button>
      <button type="button" class="btn btn-warning kakaoLogin">
        카카오 로그인
      </button>
    </div>

    <script>
      // ejs 서버 측 문법으로 path 삽입해 줘야 함
      const PORT = <%- JSON.stringify(port) %>

      const redirectBtn = (endPoint) => {
        
      }

      document.getElementById("sign_in").addEventListener("click", () => {
        const url = `http://localhost:${PORT}/api/signin`;
        const email = document.getElementById("sign_in_page_email").value;
        const password = document.getElementById("sign_in_page_pw").value;

        //json stringify로 던져주는 것? 은 api가 어떻게 구현됐느냐의 문제임, 데이터를보낼땐 직렬화 해야 함(fetch는 이를 위해 json stringify를 요구한 것 뿐)
        //받을 땐 express가 있으니까, express 자체에서
        const options = {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ email, password }),
        };

        fetch(url, options).then((response) => {
          try {
            if (response.ok === false) {
              throw new Error();
            }
            //서버가 리스폰스를 주면, 리다이렉트는 클라와 프론트가 알아서 하는 것(성공과 실패를 결정짓는 것만 서버임).
            window.location.href = "./main";
          } catch (error) {
            console.error(error);
          }
        });
      });

      document.querySelector('button.naverLogin').addEventListener("click", async () => {
        window.location.href = "/auth/naver"
      })

      document.querySelector("#sign_up").addEventListener("click", ()=> {
        windw.location.href = "signup"
      })
    </script>
  </body>

  <script></script>
</html>
